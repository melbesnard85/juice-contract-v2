{
  "address": "0xf4326041BE30a4b7fc4db9Bb6286fef458F71fe2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IJBOperatorStore",
          "name": "_operatorStore",
          "type": "address"
        },
        {
          "internalType": "contract IJBProjects",
          "name": "_projects",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IJBTerminal",
          "name": "terminal",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "AddTerminal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IJBTerminal",
          "name": "terminal",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "RemoveTerminal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IJBController",
          "name": "controller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SetController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IJBTerminal",
          "name": "terminal",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SetPrimaryTerminal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "contract IJBTerminal[]",
          "name": "_terminals",
          "type": "address[]"
        }
      ],
      "name": "addTerminalsOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "controllerOf",
      "outputs": [
        {
          "internalType": "contract IJBController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "isTerminalDelegateOf",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "contract IJBTerminal",
          "name": "_terminal",
          "type": "address"
        }
      ],
      "name": "isTerminalOf",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorStore",
      "outputs": [
        {
          "internalType": "contract IJBOperatorStore",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "primaryTerminalOf",
      "outputs": [
        {
          "internalType": "contract IJBTerminal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projects",
      "outputs": [
        {
          "internalType": "contract IJBProjects",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "contract IJBTerminal",
          "name": "_terminal",
          "type": "address"
        }
      ],
      "name": "removeTerminalOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "contract IJBController",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setControllerOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "contract IJBTerminal",
          "name": "_terminal",
          "type": "address"
        }
      ],
      "name": "setPrimaryTerminalOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "terminalsOf",
      "outputs": [
        {
          "internalType": "contract IJBTerminal[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa2cda532ace1046d1d33b373f7f74e86f1dc70d1ec4a8ed546bd09f06fd83410",
  "receipt": {
    "to": null,
    "from": "0xE9bE6df23C7f9CaBa3005DA2fa2d8714d340D0aF",
    "contractAddress": "0xf4326041BE30a4b7fc4db9Bb6286fef458F71fe2",
    "transactionIndex": 0,
    "gasUsed": "1747008",
    "logsBloom": "0x
    "blockHash": "0xaeec2b9dfe56179ed8332c82248fea3ce2f5cf5f20237798f7d0113b9033096e",
    "transactionHash": "0xa2cda532ace1046d1d33b373f7f74e86f1dc70d1ec4a8ed546bd09f06fd83410",
    "logs": [],
    "blockNumber": 9631497,
    "cumulativeGasUsed": "1747008",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x21c1E45E7EBC41f3ED0aB6660204d63c911c93a9",
    "0x0a75928644d0E25Dc9340c33d0D946Fabef2046C"
  ],
  "solcInputHash": "5f321124cef92f5734094814cf45799b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IJBOperatorStore\",\"name\":\"_operatorStore\",\"type\":\"address\"},{\"internalType\":\"contract IJBProjects\",\"name\":\"_projects\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IJBTerminal\",\"name\":\"terminal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AddTerminal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IJBTerminal\",\"name\":\"terminal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"RemoveTerminal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IJBController\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SetController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IJBTerminal\",\"name\":\"terminal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SetPrimaryTerminal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"contract IJBTerminal[]\",\"name\":\"_terminals\",\"type\":\"address[]\"}],\"name\":\"addTerminalsOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"controllerOf\",\"outputs\":[{\"internalType\":\"contract IJBController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"isTerminalDelegateOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"contract IJBTerminal\",\"name\":\"_terminal\",\"type\":\"address\"}],\"name\":\"isTerminalOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorStore\",\"outputs\":[{\"internalType\":\"contract IJBOperatorStore\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"primaryTerminalOf\",\"outputs\":[{\"internalType\":\"contract IJBTerminal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"contract IJBProjects\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"contract IJBTerminal\",\"name\":\"_terminal\",\"type\":\"address\"}],\"name\":\"removeTerminalOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"contract IJBController\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"setControllerOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"contract IJBTerminal\",\"name\":\"_terminal\",\"type\":\"address\"}],\"name\":\"setPrimaryTerminalOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"terminalsOf\",\"outputs\":[{\"internalType\":\"contract IJBTerminal[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTerminalsOf(uint256,address[])\":{\"details\":\"Only a project owner, an operator, or its controller can add terminals.\",\"params\":{\"_projectId\":\"The ID of the project having a terminal added.\",\"_terminals\":\"The terminals to add.\"}},\"constructor\":{\"params\":{\"_operatorStore\":\"A contract storing operator assignments.\",\"_projects\":\"A contract which mints ERC-721's that represent project ownership and transfers.\"}},\"isTerminalDelegateOf(uint256,address)\":{\"params\":{\"_contract\":\"The address of the terminal to check for.\",\"_projectId\":\"The ID of the project to check within.\"},\"returns\":{\"_0\":\"A flag indicating whether or not the specified terminal is a terminal of the specified project.\"}},\"isTerminalOf(uint256,address)\":{\"params\":{\"_projectId\":\"The ID of the project to check within.\",\"_terminal\":\"The address of the terminal to check for.\"},\"returns\":{\"_0\":\"A flag indicating whether or not the specified terminal is a terminal of the specified project.\"}},\"primaryTerminalOf(uint256,address)\":{\"details\":\"The zero address is returned if a terminal isn't found for the specified token.\",\"params\":{\"_projectId\":\"The ID of the project to get a terminal for.\",\"_token\":\"The token the terminal accepts.\"},\"returns\":{\"_0\":\"The primary terminal for the project for the specified token.\"}},\"removeTerminalOf(uint256,address)\":{\"details\":\"Only a project owner or an operator can remove one of its terminals. \",\"params\":{\"_projectId\":\"The ID of the project having a terminal removed.\",\"_terminal\":\"The terminal to remove.\"}},\"setControllerOf(uint256,address)\":{\"details\":\" A controller can be set if: - the message sender is the project owner or an operator is changing the controller. - or, the controller hasn't been set yet and the message sender is the controller being set. - or, the current controller is setting a new controller.\",\"params\":{\"_controller\":\"The new controller to set.\",\"_projectId\":\"The ID of the project to set a new controller for.\"}},\"setPrimaryTerminalOf(uint256,address)\":{\"details\":\"The terminal will be set as the primary for the token that its vault accepts. \",\"params\":{\"_projectId\":\"The ID of the project for which a primary token is being set.\",\"_terminal\":\"The terminal to make primary.\"}},\"terminalsOf(uint256)\":{\"params\":{\"_projectId\":\"The ID of the project to get terminals of.\"},\"returns\":{\"_0\":\"An array of terminal addresses.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addTerminalsOf(uint256,address[])\":{\"notice\":\" Add terminals to project's list of terminals.\"},\"controllerOf(uint256)\":{\"notice\":\" For each project ID, the controller that manages how terminals interact with tokens and funding cycles. _projectId The ID of the project to get the controller of.\"},\"isTerminalDelegateOf(uint256,address)\":{\"notice\":\"Whether or not a specified terminal is a terminal of the specified project.\"},\"isTerminalOf(uint256,address)\":{\"notice\":\"Whether or not a specified terminal is a terminal of the specified project.\"},\"operatorStore()\":{\"notice\":\" A contract storing operator assignments.\"},\"primaryTerminalOf(uint256,address)\":{\"notice\":\"The primary terminal that is managing funds for a project for a specified token.\"},\"projects()\":{\"notice\":\" The Projects contract which mints ERC-721's that represent project ownership and transfers.\"},\"removeTerminalOf(uint256,address)\":{\"notice\":\" Remove a terminal from a project's list of terminals.\"},\"setControllerOf(uint256,address)\":{\"notice\":\"Update the controller that manages how terminals interact with the ecosystem.\"},\"setPrimaryTerminalOf(uint256,address)\":{\"notice\":\"Project's can set which terminal should be their primary for a particular token. This is useful in case a project has several terminals connected for a particular token.\"},\"terminalsOf(uint256)\":{\"notice\":\"For each project ID, the terminals that are currently managing its funds.\"}},\"notice\":\"Keeps a reference of which terminal contracts each project is currently accepting funds through, and which controller contract is managing each project's tokens and funding cycles.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/v2/JBDirectory.sol\":\"JBDirectory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":21000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/v2/JBDirectory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './interfaces/IJBTerminal.sol';\\nimport './interfaces/IJBDirectory.sol';\\nimport './abstract/JBOperatable.sol';\\nimport './libraries/JBOperations.sol';\\n\\n/**\\n  @notice\\n  Keeps a reference of which terminal contracts each project is currently accepting funds through, and which controller contract is managing each project's tokens and funding cycles.\\n*/\\ncontract JBDirectory is IJBDirectory, JBOperatable {\\n  //*********************************************************************//\\n  // --------------------- private stored properties ------------------- //\\n  //*********************************************************************//\\n\\n  /** \\n    @notice \\n    For each project ID, the terminals that are currently managing its funds.\\n\\n    _projectId The ID of the project to get terminals of.\\n  */\\n  mapping(uint256 => IJBTerminal[]) private _terminalsOf;\\n\\n  /** \\n    @notice \\n    The project's primary terminal for a token.\\n\\n    _projectId The ID of the project to get the primary terminal of.\\n    _token The token to get the project's primary terminal of.\\n  */\\n  mapping(uint256 => mapping(address => IJBTerminal)) private _primaryTerminalOf;\\n\\n  //*********************************************************************//\\n  // ---------------- public immutable stored properties --------------- //\\n  //*********************************************************************//\\n\\n  /** \\n    @notice \\n    The Projects contract which mints ERC-721's that represent project ownership and transfers.\\n  */\\n  IJBProjects public immutable override projects;\\n\\n  //*********************************************************************//\\n  // --------------------- public stored properties -------------------- //\\n  //*********************************************************************//\\n\\n  /** \\n    @notice \\n    For each project ID, the controller that manages how terminals interact with tokens and funding cycles.\\n\\n    _projectId The ID of the project to get the controller of.\\n  */\\n  mapping(uint256 => IJBController) public override controllerOf;\\n\\n  //*********************************************************************//\\n  // ------------------------- external views -------------------------- //\\n  //*********************************************************************//\\n\\n  /** \\n    @notice\\n    For each project ID, the terminals that are currently managing its funds.\\n\\n    @param _projectId The ID of the project to get terminals of.\\n\\n    @return An array of terminal addresses.\\n  */\\n  function terminalsOf(uint256 _projectId) external view override returns (IJBTerminal[] memory) {\\n    return _terminalsOf[_projectId];\\n  }\\n\\n  /** \\n    @notice\\n    Whether or not a specified terminal is a terminal of the specified project.\\n\\n    @param _projectId The ID of the project to check within.\\n    @param _terminal The address of the terminal to check for.\\n\\n    @return A flag indicating whether or not the specified terminal is a terminal of the specified project.\\n  */\\n  function isTerminalOf(uint256 _projectId, IJBTerminal _terminal)\\n    public\\n    view\\n    override\\n    returns (bool)\\n  {\\n    for (uint256 _i; _i < _terminalsOf[_projectId].length; _i++)\\n      if (_terminalsOf[_projectId][_i] == _terminal) return true;\\n    return false;\\n  }\\n\\n  /** \\n    @notice\\n    Whether or not a specified terminal is a terminal of the specified project.\\n\\n    @param _projectId The ID of the project to check within.\\n    @param _contract The address of the terminal to check for.\\n\\n    @return A flag indicating whether or not the specified terminal is a terminal of the specified project.\\n  */\\n  function isTerminalDelegateOf(uint256 _projectId, address _contract)\\n    public\\n    view\\n    override\\n    returns (bool)\\n  {\\n    for (uint256 _i; _i < _terminalsOf[_projectId].length; _i++)\\n      if (address(_terminalsOf[_projectId][_i].delegate()) == _contract) return true;\\n    return false;\\n  }\\n\\n  /** \\n    @notice\\n    The primary terminal that is managing funds for a project for a specified token.\\n\\n    @dev\\n    The zero address is returned if a terminal isn't found for the specified token.\\n\\n    @param _projectId The ID of the project to get a terminal for.\\n    @param _token The token the terminal accepts.\\n\\n    @return The primary terminal for the project for the specified token.\\n  */\\n  function primaryTerminalOf(uint256 _projectId, address _token)\\n    public\\n    view\\n    override\\n    returns (IJBTerminal)\\n  {\\n    // If a primary terminal for the token was specifically set, return it.\\n    if (_primaryTerminalOf[_projectId][_token] != IJBTerminal(address(0)))\\n      return _primaryTerminalOf[_projectId][_token];\\n\\n    // Return the first terminal which accepts the specified token.\\n    for (uint256 _i; _i < _terminalsOf[_projectId].length; _i++) {\\n      IJBTerminal _terminal = _terminalsOf[_projectId][_i];\\n      if (_terminal.token() == _token) return _terminal;\\n    }\\n\\n    // Not found.\\n    return IJBTerminal(address(0));\\n  }\\n\\n  //*********************************************************************//\\n  // -------------------------- constructor ---------------------------- //\\n  //*********************************************************************//\\n\\n  /** \\n    @param _operatorStore A contract storing operator assignments.\\n    @param _projects A contract which mints ERC-721's that represent project ownership and transfers.\\n  */\\n  constructor(IJBOperatorStore _operatorStore, IJBProjects _projects) JBOperatable(_operatorStore) {\\n    projects = _projects;\\n  }\\n\\n  //*********************************************************************//\\n  // ---------------------- external transactions ---------------------- //\\n  //*********************************************************************//\\n\\n  /**\\n    @notice\\n    Update the controller that manages how terminals interact with the ecosystem.\\n\\n    @dev \\n    A controller can be set if:\\n    - the message sender is the project owner or an operator is changing the controller.\\n    - or, the controller hasn't been set yet and the message sender is the controller being set.\\n    - or, the current controller is setting a new controller.\\n\\n    @param _projectId The ID of the project to set a new controller for.\\n    @param _controller The new controller to set.\\n  */\\n  function setControllerOf(uint256 _projectId, IJBController _controller)\\n    external\\n    override\\n    requirePermissionAllowingOverride(\\n      projects.ownerOf(_projectId),\\n      _projectId,\\n      JBOperations.SET_CONTROLLER,\\n      (address(controllerOf[_projectId]) == address(0) && msg.sender == address(_controller)) ||\\n        address(controllerOf[_projectId]) == msg.sender\\n    )\\n  {\\n    // Get a reference to the current controller being used.\\n    IJBController _currentController = controllerOf[_projectId];\\n\\n    // If the controller is already set, nothing to do.\\n    if (_currentController == _controller) return;\\n\\n    // The project must exist.\\n    require(projects.count() >= _projectId, '0x2b: NOT_FOUND');\\n\\n    // Can't set the zero address.\\n    require(_controller != IJBController(address(0)), '0x2c: ZERO_ADDRESS');\\n\\n    // Set the new controller.\\n    controllerOf[_projectId] = _controller;\\n\\n    emit SetController(_projectId, _controller, msg.sender);\\n  }\\n\\n  /** \\n    @notice \\n    Add terminals to project's list of terminals.\\n\\n    @dev\\n    Only a project owner, an operator, or its controller can add terminals.\\n\\n    @param _projectId The ID of the project having a terminal added.\\n    @param _terminals The terminals to add.\\n  */\\n  function addTerminalsOf(uint256 _projectId, IJBTerminal[] calldata _terminals)\\n    external\\n    override\\n    requirePermissionAllowingOverride(\\n      projects.ownerOf(_projectId),\\n      _projectId,\\n      JBOperations.ADD_TERMINALS,\\n      msg.sender == address(controllerOf[_projectId])\\n    )\\n  {\\n    for (uint256 _i = 0; _i < _terminals.length; _i++) {\\n      // Can't set the zero address.\\n      require(_terminals[_i] != IJBTerminal(address(0)), '0x2d: ZERO_ADDRESS');\\n\\n      // If the terminal is already in the project's list of terminals, return.\\n      if (isTerminalOf(_projectId, _terminals[_i])) continue;\\n\\n      // Set the new terminal.\\n      _terminalsOf[_projectId].push(_terminals[_i]);\\n\\n      emit AddTerminal(_projectId, _terminals[_i], msg.sender);\\n    }\\n  }\\n\\n  /** \\n    @notice \\n    Remove a terminal from a project's list of terminals.\\n\\n    @dev\\n    Only a project owner or an operator can remove one of its terminals. \\n\\n    @param _projectId The ID of the project having a terminal removed.\\n    @param _terminal The terminal to remove.\\n  */\\n  function removeTerminalOf(uint256 _projectId, IJBTerminal _terminal)\\n    external\\n    override\\n    requirePermission(projects.ownerOf(_projectId), _projectId, JBOperations.REMOVE_TERMINAL)\\n  {\\n    // Get a reference to the terminals of the project.\\n    IJBTerminal[] memory _terminals = _terminalsOf[_projectId];\\n\\n    // Delete the stored terminals for the project.\\n    delete _terminalsOf[_projectId];\\n\\n    // Repopulate the stored terminals for the project, omitting the one being deleted.\\n    for (uint256 _i; _i < _terminals.length; _i++)\\n      // Don't include the terminal being deleted.\\n      if (_terminals[_i] != _terminal) _terminalsOf[_projectId].push(_terminals[_i]);\\n\\n    // If the terminal that is being removed is the primary terminal for the token, delete it from being primary terminal.\\n    if (_primaryTerminalOf[_projectId][_terminal.token()] == _terminal)\\n      delete _primaryTerminalOf[_projectId][_terminal.token()];\\n\\n    emit RemoveTerminal(_projectId, _terminal, msg.sender);\\n  }\\n\\n  /** \\n    @notice\\n    Project's can set which terminal should be their primary for a particular token.\\n    This is useful in case a project has several terminals connected for a particular token.\\n\\n    @dev\\n    The terminal will be set as the primary for the token that its vault accepts. \\n\\n    @param _projectId The ID of the project for which a primary token is being set.\\n    @param _terminal The terminal to make primary.\\n  */\\n  function setPrimaryTerminalOf(uint256 _projectId, IJBTerminal _terminal)\\n    external\\n    override\\n    requirePermission(projects.ownerOf(_projectId), _projectId, JBOperations.SET_PRIMARY_TERMINAL)\\n  {\\n    // Can't set the zero address.\\n    require(_terminal != IJBTerminal(address(0)), '0x2e: ZERO_ADDRESS');\\n\\n    // Get a reference to the token that the terminal's vault accepts.\\n    address _token = _terminal.token();\\n\\n    // Store the terminal as the primary for the particular token.\\n    _primaryTerminalOf[_projectId][_token] = _terminal;\\n\\n    emit SetPrimaryTerminal(_projectId, _token, _terminal, msg.sender);\\n  }\\n}\\n\",\"keccak256\":\"0x6a3f77758846c00e11a7e7ea253715eea513a3233ea0ad51bebddfb9232b3e0f\",\"license\":\"MIT\"},\"contracts/v2/abstract/JBOperatable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './../interfaces/IJBOperatable.sol';\\n\\n/** \\n  @notice\\n  Modifiers to allow access to functions based on the message sender's operator status.\\n*/\\nabstract contract JBOperatable is IJBOperatable {\\n  modifier requirePermission(\\n    address _account,\\n    uint256 _domain,\\n    uint256 _permissionIndex\\n  ) {\\n    require(\\n      msg.sender == _account ||\\n        operatorStore.hasPermission(msg.sender, _account, _domain, _permissionIndex) ||\\n        operatorStore.hasPermission(msg.sender, _account, 0, _permissionIndex),\\n      'Operatable: UNAUTHORIZED'\\n    );\\n    _;\\n  }\\n\\n  modifier requirePermissionAllowingOverride(\\n    address _account,\\n    uint256 _domain,\\n    uint256 _permissionIndex,\\n    bool _override\\n  ) {\\n    require(\\n      _override ||\\n        msg.sender == _account ||\\n        operatorStore.hasPermission(msg.sender, _account, _domain, _permissionIndex) ||\\n        operatorStore.hasPermission(msg.sender, _account, 0, _permissionIndex),\\n      'Operatable: UNAUTHORIZED'\\n    );\\n    _;\\n  }\\n\\n  /** \\n    @notice \\n    A contract storing operator assignments.\\n  */\\n  IJBOperatorStore public immutable override operatorStore;\\n\\n  /** \\n    @param _operatorStore A contract storing operator assignments.\\n  */\\n  constructor(IJBOperatorStore _operatorStore) {\\n    operatorStore = _operatorStore;\\n  }\\n}\\n\",\"keccak256\":\"0x8b5b41ab9dfe24ec6da1cbf2de40535d1af341a2fba0d531e959e2d25a514922\",\"license\":\"MIT\"},\"contracts/v2/enums/JBBallotState.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nenum JBBallotState {\\n  Approved,\\n  Active,\\n  Failed,\\n  Standby\\n}\\n\",\"keccak256\":\"0x6fad35e4775acd47bfa66436a633f9632a81c79af3cceed1622b7e8f96b9f0a1\",\"license\":\"MIT\"},\"contracts/v2/interfaces/IJBController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './IJBDirectory.sol';\\nimport './IJBTerminal.sol';\\nimport './IJBFundingCycleStore.sol';\\n\\ninterface IJBController {\\n  function reservedTokenBalanceOf(uint256 _projectId, uint256 _reservedRate)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function prepForMigrationOf(uint256 _projectId, IJBController _from) external;\\n\\n  function mintTokensOf(\\n    uint256 _projectId,\\n    uint256 _tokenCount,\\n    address _beneficiary,\\n    string calldata _memo,\\n    bool _preferClaimedTokens,\\n    uint256 _reserveRate\\n  ) external returns (uint256 beneficiaryTokenCount);\\n\\n  function burnTokensOf(\\n    address _holder,\\n    uint256 _projectId,\\n    uint256 _tokenCount,\\n    string calldata _memo,\\n    bool _preferClaimedTokens\\n  ) external;\\n\\n  function overflowAllowanceOf(\\n    uint256 _projectId,\\n    uint256 _configuration,\\n    IJBTerminal _terminal\\n  ) external view returns (uint256);\\n\\n  function distributionLimitOf(\\n    uint256 _projectId,\\n    uint256 _configuration,\\n    IJBTerminal _terminal\\n  ) external view returns (uint256);\\n\\n  function currencyOf(\\n    uint256 _projectId,\\n    uint256 _configuration,\\n    IJBTerminal _terminal\\n  ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3e4385f3bc7b2c078211344a393f6f4c3256ee755d334c03e93d0483621bcfe3\",\"license\":\"MIT\"},\"contracts/v2/interfaces/IJBDirectory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './IJBTerminal.sol';\\nimport './IJBProjects.sol';\\nimport './IJBController.sol';\\n\\ninterface IJBDirectory {\\n  event SetController(uint256 indexed projectId, IJBController indexed controller, address caller);\\n\\n  event AddTerminal(uint256 indexed projectId, IJBTerminal indexed terminal, address caller);\\n\\n  event RemoveTerminal(uint256 indexed projectId, IJBTerminal indexed terminal, address caller);\\n\\n  event SetPrimaryTerminal(\\n    uint256 indexed projectId,\\n    address indexed token,\\n    IJBTerminal indexed terminal,\\n    address caller\\n  );\\n\\n  function projects() external view returns (IJBProjects);\\n\\n  function controllerOf(uint256 _projectId) external view returns (IJBController);\\n\\n  function primaryTerminalOf(uint256 _projectId, address _token)\\n    external\\n    view\\n    returns (IJBTerminal);\\n\\n  function terminalsOf(uint256 _projectId) external view returns (IJBTerminal[] memory);\\n\\n  function isTerminalOf(uint256 _projectId, IJBTerminal _terminal) external view returns (bool);\\n\\n  function isTerminalDelegateOf(uint256 _projectId, address _delegate) external view returns (bool);\\n\\n  function addTerminalsOf(uint256 _projectId, IJBTerminal[] calldata _terminals) external;\\n\\n  function removeTerminalOf(uint256 _projectId, IJBTerminal _terminal) external;\\n\\n  function setControllerOf(uint256 _projectId, IJBController _controller) external;\\n\\n  function setPrimaryTerminalOf(uint256 _projectId, IJBTerminal _terminal) external;\\n}\\n\",\"keccak256\":\"0xcc2fa4db1c2684f106e0353fad26b45fb0dc09027d3509d40d5e9fce84a07148\",\"license\":\"MIT\"},\"contracts/v2/interfaces/IJBFundingCycleBallot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './../enums/JBBallotState.sol';\\n\\ninterface IJBFundingCycleBallot {\\n  function duration() external view returns (uint256);\\n\\n  function stateOf(uint256 _configured) external view returns (JBBallotState);\\n}\\n\",\"keccak256\":\"0x7649782cc0f754b369bace5ac88e863027fa35d5912eef32ab0e8aef123adccb\",\"license\":\"MIT\"},\"contracts/v2/interfaces/IJBFundingCycleStore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './IJBFundingCycleBallot.sol';\\nimport './../structs/JBFundingCycle.sol';\\nimport './../structs/JBFundingCycleData.sol';\\n\\ninterface IJBFundingCycleStore {\\n  event Configure(\\n    uint256 indexed configuration,\\n    uint256 indexed projectId,\\n    JBFundingCycleData data,\\n    uint256 metadata,\\n    address caller\\n  );\\n\\n  event Init(uint256 indexed configuration, uint256 indexed projectId, uint256 indexed basedOn);\\n\\n  function latestConfigurationOf(uint256 _projectId) external view returns (uint256);\\n\\n  function get(uint256 _projectId, uint256 _configuration)\\n    external\\n    view\\n    returns (JBFundingCycle memory);\\n\\n  function queuedOf(uint256 _projectId) external view returns (JBFundingCycle memory);\\n\\n  function currentOf(uint256 _projectId) external view returns (JBFundingCycle memory);\\n\\n  function currentBallotStateOf(uint256 _projectId) external view returns (JBBallotState);\\n\\n  function configureFor(\\n    uint256 _projectId,\\n    JBFundingCycleData calldata _data,\\n    uint256 _metadata\\n  ) external returns (JBFundingCycle memory fundingCycle);\\n}\\n\",\"keccak256\":\"0x5ef8969ff2fc6c58e521f1f930e7fcf0330a421d1643d9e88ea2b30e137df553\",\"license\":\"MIT\"},\"contracts/v2/interfaces/IJBOperatable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './IJBOperatorStore.sol';\\n\\ninterface IJBOperatable {\\n  function operatorStore() external view returns (IJBOperatorStore);\\n}\\n\",\"keccak256\":\"0x150097e253a667d2336367445bea019bb3669ef7c82d358befe1f4cdd480e9aa\",\"license\":\"MIT\"},\"contracts/v2/interfaces/IJBOperatorStore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './../structs/JBOperatorData.sol';\\n\\ninterface IJBOperatorStore {\\n  event SetOperator(\\n    address indexed operator,\\n    address indexed account,\\n    uint256 indexed domain,\\n    uint256[] permissionIndexes,\\n    uint256 packed\\n  );\\n\\n  function permissionsOf(\\n    address _operator,\\n    address _account,\\n    uint256 _domain\\n  ) external view returns (uint256);\\n\\n  function hasPermission(\\n    address _operator,\\n    address _account,\\n    uint256 _domain,\\n    uint256 _permissionIndex\\n  ) external view returns (bool);\\n\\n  function hasPermissions(\\n    address _operator,\\n    address _account,\\n    uint256 _domain,\\n    uint256[] calldata _permissionIndexes\\n  ) external view returns (bool);\\n\\n  function setOperator(JBOperatorData calldata _operatorData) external;\\n\\n  function setOperators(JBOperatorData[] calldata _operatorData) external;\\n}\\n\",\"keccak256\":\"0x50a26fddc575a50176df7deb9225ec1816b0158c9e9b8555e7921a3261254ed8\",\"license\":\"MIT\"},\"contracts/v2/interfaces/IJBProjects.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\nimport './IJBTerminal.sol';\\n\\ninterface IJBProjects is IERC721 {\\n  event Create(\\n    uint256 indexed projectId,\\n    address indexed owner,\\n    bytes32 indexed handle,\\n    string uri,\\n    address caller\\n  );\\n\\n  event SetHandle(uint256 indexed projectId, bytes32 indexed handle, address caller);\\n\\n  event SetUri(uint256 indexed projectId, string uri, address caller);\\n\\n  event TransferHandle(\\n    uint256 indexed projectId,\\n    address indexed transferAddress,\\n    bytes32 indexed handle,\\n    bytes32 newHandle,\\n    address caller\\n  );\\n\\n  event ClaimHandle(\\n    uint256 indexed projectId,\\n    address indexed transferAddress,\\n    bytes32 indexed handle,\\n    address caller\\n  );\\n\\n  event ChallengeHandle(\\n    bytes32 indexed handle,\\n    uint256 indexed projectId,\\n    uint256 challengeExpiry,\\n    address caller\\n  );\\n\\n  event RenewHandle(bytes32 indexed handle, uint256 indexed projectId, address caller);\\n\\n  function count() external view returns (uint256);\\n\\n  function metadataCidOf(uint256 _projectId) external view returns (string memory);\\n\\n  function handleOf(uint256 _projectId) external returns (bytes32 handle);\\n\\n  function idFor(bytes32 _handle) external returns (uint256 projectId);\\n\\n  function transferAddressFor(bytes32 _handle) external returns (address receiver);\\n\\n  function challengeExpiryOf(bytes32 _handle) external returns (uint256);\\n\\n  function createFor(\\n    address _owner,\\n    bytes32 _handle,\\n    string calldata _metadataCid\\n  ) external returns (uint256 id);\\n\\n  function setHandleOf(uint256 _projectId, bytes32 _handle) external;\\n\\n  function setMetadataCidOf(uint256 _projectId, string calldata _metadataCid) external;\\n\\n  function transferHandleOf(\\n    uint256 _projectId,\\n    address _transferAddress,\\n    bytes32 _newHandle\\n  ) external returns (bytes32 _handle);\\n\\n  function claimHandle(\\n    bytes32 _handle,\\n    address _for,\\n    uint256 _projectId\\n  ) external;\\n\\n  function challengeHandle(bytes32 _handle) external;\\n\\n  function renewHandleOf(uint256 _projectId) external;\\n}\\n\",\"keccak256\":\"0xa437875cce9e3e9da493b5109635a3f843a4de0ec08dfeedb68ad344bb14720f\",\"license\":\"MIT\"},\"contracts/v2/interfaces/IJBTerminal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './IJBDirectory.sol';\\nimport './IJBVault.sol';\\n\\ninterface IJBTerminal {\\n  function token() external view returns (address);\\n\\n  function ethBalanceOf(uint256 _projectId) external view returns (uint256);\\n\\n  function remainingDistributionLimitOf(\\n    uint256 _projectId,\\n    uint256 _fundingCycleConfiguration,\\n    uint256 _fundingCycleNumber\\n  ) external view returns (uint256);\\n\\n  function delegate() external view returns (address);\\n\\n  function pay(\\n    uint256 _projectId,\\n    address _beneficiary,\\n    uint256 _minReturnedTokens,\\n    bool _preferClaimedTokens,\\n    string calldata _memo,\\n    bytes calldata _delegateMetadata\\n  ) external payable;\\n\\n  function addToBalanceOf(uint256 _projectId, string memory _memo) external payable;\\n}\\n\",\"keccak256\":\"0xe2f62536c63548587b291b2c37fd474e835df9a2a5829c7c49a3d5d280c7a2c9\",\"license\":\"MIT\"},\"contracts/v2/interfaces/IJBVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\nimport './IJBDirectory.sol';\\n\\ninterface IJBVault {\\n  event Deposit(uint256 indexed projectId, uint256 amount, address caller);\\n  event Withdraw(uint256 indexed projectId, uint256 amount, address to, address caller);\\n\\n  function token() external view returns (address);\\n\\n  function deposit(uint256 _projectId, uint256 _amount) external payable;\\n\\n  function withdraw(\\n    uint256 _projectId,\\n    uint256 _amount,\\n    address payable _to\\n  ) external;\\n}\\n\",\"keccak256\":\"0xf88018441399e9abfbcf9cb0fca64bde08a25d98015823a78c9cc64deca7a972\",\"license\":\"MIT\"},\"contracts/v2/libraries/JBOperations.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nlibrary JBOperations {\\n  uint256 public constant RECONFIGURE = 1;\\n  uint256 public constant REDEEM = 2;\\n  uint256 public constant MIGRATE_CONTROLLER = 3;\\n  uint256 public constant MIGRATE_TERMINAL = 4;\\n  uint256 public constant PROCESS_FEES = 5;\\n  uint256 public constant SET_HANDLE = 6;\\n  uint256 public constant SET_METADATA_CID = 7;\\n  uint256 public constant CLAIM_HANDLE = 8;\\n  uint256 public constant RENEW_HANDLE = 9;\\n  uint256 public constant ISSUE = 10;\\n  uint256 public constant CHANGE_TOKEN = 11;\\n  uint256 public constant MINT = 12;\\n  uint256 public constant BURN = 13;\\n  uint256 public constant TRANSFER = 14;\\n  uint256 public constant REQUIRE_CLAIM = 15;\\n  uint256 public constant SET_CONTROLLER = 16;\\n  uint256 public constant ADD_TERMINALS = 17;\\n  uint256 public constant REMOVE_TERMINAL = 18;\\n  uint256 public constant SET_PRIMARY_TERMINAL = 19;\\n  uint256 public constant USE_ALLOWANCE = 20;\\n  uint256 public constant SET_SPLITS = 21;\\n}\\n\",\"keccak256\":\"0xb1ef002f9fe9aa4ebd36d678765e9a3d607b99ada900660e6f5d45b7e17c0053\",\"license\":\"MIT\"},\"contracts/v2/structs/JBFundingCycle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './../interfaces/IJBFundingCycleBallot.sol';\\n\\nstruct JBFundingCycle {\\n  // The funding cycle number for each project.\\n  // Each funding cycle has a number that is an increment of the cycle that directly preceded it.\\n  // Each project's first funding cycle has a number of 1.\\n  uint256 number;\\n  // The timestamp when the parameters for this funding cycle were configured.\\n  // This value will stay the same for subsequent funding cycles that roll over from an originally configured cycle.\\n  uint256 configuration;\\n  // The `configuration` of the funding cycle with a `number` one less than this cycle's `number`.\\n  uint256 basedOn;\\n  // The timestamp marking the moment from which the funding cycle is considered active.\\n  // It is a unix timestamp measured in seconds.\\n  uint256 start;\\n  // The number of seconds the funding cycle lasts for, after which a new funding cycle will start.\\n  // A duration of 0 means that the funding cycle will stay active until the project owner explicitly issues a reconfiguration, at which point a new funding cycle will be triggered with the updated properties.\\n  // If the duration is greater than 0, a project owner cannot make changes to a funding cycle's parameters while it is active \\u2013 any proposed changes will apply to the subsequent cycle.\\n  // If no changes are proposed, a funding cycle rolls over to another one with the same properties but new `start` timestamp and a discounted `weight`.\\n  // A duration has a minimum of 1000 seconds to prevent extractive miner behavior, see https://ethereum.stackexchange.com/questions/413/can-a-contract-safely-rely-on-block-timestamp.\\n  uint256 duration;\\n  // A number that contracts can use to base arbitrary calculations on.\\n  // For example, the `JBETHPaymentTerminalStore` uses this to determine how many tokens it should mint when a payment is received.\\n  uint256 weight;\\n  // A number from 0-1000000000 indicating by how much the `weight` of the subsequent funding cycle should be reduced, if the project owner hasn't configured the subsequent funding cycle with an explicit `weight`.\\n  // If it's 0, each funding cycle will have equal weight.\\n  // If the number is 900000000, the next funding cycle will have a 10% smaller weight.\\n  // If the number is 1000000001, the funding cycle is non-recurrin so there cannot be a next cycle.\\n  uint256 discountRate;\\n  // An address of a contract that says whether a proposed reconfiguration should be accepted or rejected.\\n  // It can be used to create rules around how a project owner can change funding cycle parameters over time.\\n  IJBFundingCycleBallot ballot;\\n  // Extra data that can be associated with a funding cycle.\\n  uint256 metadata;\\n}\\n\",\"keccak256\":\"0x34ff85de4898979b20db9c968c538588cc7acde263afc81c0b29ac2dbd821d4c\",\"license\":\"MIT\"},\"contracts/v2/structs/JBFundingCycleData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport './../interfaces/IJBFundingCycleBallot.sol';\\n\\nstruct JBFundingCycleData {\\n  // The duration of the funding cycle in days.\\n  // A duration of 0 is no duration, meaning projects can trigger a new funding cycle on demand by issueing a reconfiguration.\\n  uint256 duration;\\n  // The weight of the funding cycle.\\n  // This number is interpreted as a wad, meaning it has 18 decimal places.\\n  // The protocol uses the weight to determine how many tokens to mint upon receiving a payment during a funding cycle.\\n  // A value of 0 means that the weight should be inherited and potentially discounted from the currently active cycle if possible. Otherwise a weight of 0 will be used.\\n  // A value of 1 means that no tokens should be minted regardless of how many ETH was paid. The protocol will set the stored weight value to 0.\\n  // A value of 1 X 10^18 means that one token should be minted per ETH received.\\n  uint256 weight;\\n  // A number from 0-1000000001 indicating how valuable a contribution to this funding cycle is compared to previous funding cycles.\\n  // If it's 0, each funding cycle will have equal weight.\\n  // If the number is 900000000, a contribution to the next funding cycle will only give you 10% of tickets given to a contribution of the same amoutn during the current funding cycle.\\n  // If the number is 1000000001, an non-recurring funding cycle will get made.\\n  uint256 discountRate;\\n  // An address of a contract that says whether a proposed reconfiguration should be accepted or rejected.\\n  IJBFundingCycleBallot ballot;\\n}\\n\",\"keccak256\":\"0x448584648a8baf62f56e0cc5a434c793d172453b969360f7fdb31e612b28eab4\",\"license\":\"MIT\"},\"contracts/v2/structs/JBOperatorData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nstruct JBOperatorData {\\n  // The address of the operator.\\n  address operator;\\n  // The domain within which the operator is being given permissions.\\n  uint256 domain;\\n  // The indexes of the permissions the operator is being given.\\n  uint256[] permissionIndexes;\\n}\\n\",\"keccak256\":\"0x25a5007c18c3c057615869124af6b0e9cdfbd64fd8d2d7a17f428d6eea5a4835\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200200438038062002004833981016040819052620000349162000053565b6001600160601b0319606092831b8116608052911b1660a052620000ab565b600080604083850312156200006757600080fd5b8251620000748162000092565b6020840151909250620000878162000092565b809150509250929050565b6001600160a01b0381168114620000a857600080fd5b50565b60805160601c60a05160601c611ed262000132600039600081816101a4015281816102620152818161083401528181610bb00152818161113a01526115c70152600081816101cb0152818161039d01528181610476015281816109bd01528181610a96015281816112440152818161131d015281816116d101526117aa0152611ed26000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063898370ee11610081578063d17541531161005b578063d1754153146101ed578063df1441181461020d578063e527757a1461022057600080fd5b8063898370ee1461018c5780638b79543c1461019f578063ad007d63146101c657600080fd5b80636e49181f116100b25780636e49181f14610143578063714e7f3214610166578063862026501461017957600080fd5b80631cda3bfe146100ce5780635dd8f6aa146100e3575b600080fd5b6100e16100dc366004611d12565b610233565b005b6101196100f1366004611cb0565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610156610151366004611ce2565b610761565b604051901515815260200161013a565b6100e1610174366004611ce2565b610805565b610119610187366004611ce2565b610dc0565b61015661019a366004611ce2565b610f61565b6101197f000000000000000000000000000000000000000000000000000000000000000081565b6101197f000000000000000000000000000000000000000000000000000000000000000081565b6102006101fb366004611cb0565b611094565b60405161013a9190611d91565b6100e161021b366004611ce2565b61110b565b6100e161022e366004611ce2565b611598565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b1580156102b957600080fd5b505afa1580156102cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f19190611c4d565b600084815260026020526040902054849060119073ffffffffffffffffffffffffffffffffffffffff163314808061033e57503373ffffffffffffffffffffffffffffffffffffffff8516145b8061041757506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260448201859052606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b1580156103df57600080fd5b505afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104179190611c71565b806104f057506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260006044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b1580156104b857600080fd5b505afa1580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f09190611c71565b61055b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f706572617461626c653a20554e415554484f52495a4544000000000000000060448201526064015b60405180910390fd5b60005b8581101561075757600087878381811061057a5761057a611e4b565b905060200201602081019061058f9190611c93565b73ffffffffffffffffffffffffffffffffffffffff16141561060d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f307832643a205a45524f5f4144445245535300000000000000000000000000006044820152606401610552565b6106388888888481811061062357610623611e4b565b90506020020160208101906101519190611c93565b1561064257610745565b600088815260208190526040902087878381811061066257610662611e4b565b90506020020160208101906106779190611c93565b81546001810183556000928352602090922090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790558686828181106106e0576106e0611e4b565b90506020020160208101906106f59190611c93565b60405133815273ffffffffffffffffffffffffffffffffffffffff919091169089907f409bccc07b7cf7807930526a24318212d614c59f2dde05a017a41efee144e7c89060200160405180910390a35b8061074f81611deb565b91505061055e565b5050505050505050565b6000805b6000848152602081905260409020548110156107f9578273ffffffffffffffffffffffffffffffffffffffff1660008086815260200190815260200160002082815481106107b5576107b5611e4b565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1614156107e75760019150506107ff565b806107f181611deb565b915050610765565b50600090505b92915050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b15801561088b57600080fd5b505afa15801561089f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c39190611c4d565b600083815260026020526040902054839060109073ffffffffffffffffffffffffffffffffffffffff1615801561090f57503373ffffffffffffffffffffffffffffffffffffffff8516145b8061093d575060008581526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b808061095e57503373ffffffffffffffffffffffffffffffffffffffff8516145b80610a3757506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260448201859052606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b1580156109ff57600080fd5b505afa158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a379190611c71565b80610b1057506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260006044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b158015610ad857600080fd5b505afa158015610aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b109190611c71565b610b76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f706572617461626c653a20554e415554484f52495a454400000000000000006044820152606401610552565b60008681526002602052604090205473ffffffffffffffffffffffffffffffffffffffff908116908616811415610bad5750610db8565b867f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166306661abd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1457600080fd5b505afa158015610c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4c9190611cc9565b1015610cb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f307832623a204e4f545f464f554e4400000000000000000000000000000000006044820152606401610552565b73ffffffffffffffffffffffffffffffffffffffff8616610d31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f307832633a205a45524f5f4144445245535300000000000000000000000000006044820152606401610552565b60008781526002602090815260409182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8a16908117909155915133815289917f7f9a7dcb234c909a09de2f344661ad9e5b24067adb97c908647c2edcbb121c30910160405180910390a3505b505050505050565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff858116855292528220541615610e2e5750600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8086168552925290912054166107ff565b60005b6000848152602081905260409020548110156107f9576000848152602081905260408120805483908110610e6757610e67611e4b565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ef157600080fd5b505afa158015610f05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f299190611c4d565b73ffffffffffffffffffffffffffffffffffffffff161415610f4e5791506107ff9050565b5080610f5981611deb565b915050610e31565b6000805b6000848152602081905260409020548110156107f9578273ffffffffffffffffffffffffffffffffffffffff166000808681526020019081526020016000208281548110610fb557610fb5611e4b565b60009182526020918290200154604080517fc89e4361000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169263c89e436192600480840193829003018186803b15801561102457600080fd5b505afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190611c4d565b73ffffffffffffffffffffffffffffffffffffffff1614156110825760019150506107ff565b8061108c81611deb565b915050610f65565b600081815260208181526040918290208054835181840281018401909452808452606093928301828280156110ff57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110d4575b50505050509050919050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b15801561119157600080fd5b505afa1580156111a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c99190611c4d565b8260133373ffffffffffffffffffffffffffffffffffffffff841614806112be57506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015260448201849052606482018390527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b15801561128657600080fd5b505afa15801561129a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112be9190611c71565b8061139757506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015260006044830152606482018390527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b15801561135f57600080fd5b505afa158015611373573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113979190611c71565b6113fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f706572617461626c653a20554e415554484f52495a454400000000000000006044820152606401610552565b73ffffffffffffffffffffffffffffffffffffffff841661147a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f307832653a205a45524f5f4144445245535300000000000000000000000000006044820152606401610552565b60008473ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114c257600080fd5b505afa1580156114d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fa9190611c4d565b600087815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8581168086529184529382902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948b1694851790559051338152939450919289917fc670a502bbb9f8a4315f95eca901a9f99b65f89a2eb5705a58050e5c00f9d672910160405180910390a4505050505050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b15801561161e57600080fd5b505afa158015611632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116569190611c4d565b8260123373ffffffffffffffffffffffffffffffffffffffff8416148061174b57506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015260448201849052606482018390527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b15801561171357600080fd5b505afa158015611727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174b9190611c71565b8061182457506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015260006044830152606482018390527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b1580156117ec57600080fd5b505afa158015611800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118249190611c71565b61188a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f706572617461626c653a20554e415554484f52495a454400000000000000006044820152606401610552565b600085815260208181526040808320805482518185028101850190935280835291929091908301828280156118f557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116118ca575b50505060008981526020819052604081209394506119169392509050611c13565b60005b8151811015611a03578573ffffffffffffffffffffffffffffffffffffffff1682828151811061194b5761194b611e4b565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16146119f1576000878152602081905260409020825183908390811061199057611990611e4b565b60209081029190910181015182546001810184556000938452919092200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790555b806119fb81611deb565b915050611919565b508473ffffffffffffffffffffffffffffffffffffffff166001600088815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a7657600080fd5b505afa158015611a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aae9190611c4d565b73ffffffffffffffffffffffffffffffffffffffff9081168252602082019290925260400160002054161415611bbe576001600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b3957600080fd5b505afa158015611b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b719190611c4d565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555b60405133815273ffffffffffffffffffffffffffffffffffffffff86169087907fbf79cd9af545aa6edcc5ac76aa264b34ccb6e59a51b44998a766f828ec9b7c869060200160405180910390a3505050505050565b5080546000825590600052602060002090810190611c319190611c34565b50565b5b80821115611c495760008155600101611c35565b5090565b600060208284031215611c5f57600080fd5b8151611c6a81611e7a565b9392505050565b600060208284031215611c8357600080fd5b81518015158114611c6a57600080fd5b600060208284031215611ca557600080fd5b8135611c6a81611e7a565b600060208284031215611cc257600080fd5b5035919050565b600060208284031215611cdb57600080fd5b5051919050565b60008060408385031215611cf557600080fd5b823591506020830135611d0781611e7a565b809150509250929050565b600080600060408486031215611d2757600080fd5b83359250602084013567ffffffffffffffff80821115611d4657600080fd5b818601915086601f830112611d5a57600080fd5b813581811115611d6957600080fd5b8760208260051b8501011115611d7e57600080fd5b6020830194508093505050509250925092565b6020808252825182820181905260009190848201906040850190845b81811015611ddf57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101611dad565b50909695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e44577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114611c3157600080fdfea26469706673582212203befe9ee3dbcd96ebb4bec3cfb7f2bcbd8feb0c7770409a249dfde81350bb19164736f6c63430008060033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addTerminalsOf(uint256,address[])": {
        "details": "Only a project owner, an operator, or its controller can add terminals.",
        "params": {
          "_projectId": "The ID of the project having a terminal added.",
          "_terminals": "The terminals to add."
        }
      },
      "constructor": {
        "params": {
          "_operatorStore": "A contract storing operator assignments.",
          "_projects": "A contract which mints ERC-721's that represent project ownership and transfers."
        }
      },
      "isTerminalDelegateOf(uint256,address)": {
        "params": {
          "_contract": "The address of the terminal to check for.",
          "_projectId": "The ID of the project to check within."
        },
        "returns": {
          "_0": "A flag indicating whether or not the specified terminal is a terminal of the specified project."
        }
      },
      "isTerminalOf(uint256,address)": {
        "params": {
          "_projectId": "The ID of the project to check within.",
          "_terminal": "The address of the terminal to check for."
        },
        "returns": {
          "_0": "A flag indicating whether or not the specified terminal is a terminal of the specified project."
        }
      },
      "primaryTerminalOf(uint256,address)": {
        "details": "The zero address is returned if a terminal isn't found for the specified token.",
        "params": {
          "_projectId": "The ID of the project to get a terminal for.",
          "_token": "The token the terminal accepts."
        },
        "returns": {
          "_0": "The primary terminal for the project for the specified token."
        }
      },
      "removeTerminalOf(uint256,address)": {
        "details": "Only a project owner or an operator can remove one of its terminals. ",
        "params": {
          "_projectId": "The ID of the project having a terminal removed.",
          "_terminal": "The terminal to remove."
        }
      },
      "setControllerOf(uint256,address)": {
        "details": " A controller can be set if: - the message sender is the project owner or an operator is changing the controller. - or, the controller hasn't been set yet and the message sender is the controller being set. - or, the current controller is setting a new controller.",
        "params": {
          "_controller": "The new controller to set.",
          "_projectId": "The ID of the project to set a new controller for."
        }
      },
      "setPrimaryTerminalOf(uint256,address)": {
        "details": "The terminal will be set as the primary for the token that its vault accepts. ",
        "params": {
          "_projectId": "The ID of the project for which a primary token is being set.",
          "_terminal": "The terminal to make primary."
        }
      },
      "terminalsOf(uint256)": {
        "params": {
          "_projectId": "The ID of the project to get terminals of."
        },
        "returns": {
          "_0": "An array of terminal addresses."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addTerminalsOf(uint256,address[])": {
        "notice": " Add terminals to project's list of terminals."
      },
      "controllerOf(uint256)": {
        "notice": " For each project ID, the controller that manages how terminals interact with tokens and funding cycles. _projectId The ID of the project to get the controller of."
      },
      "isTerminalDelegateOf(uint256,address)": {
        "notice": "Whether or not a specified terminal is a terminal of the specified project."
      },
      "isTerminalOf(uint256,address)": {
        "notice": "Whether or not a specified terminal is a terminal of the specified project."
      },
      "operatorStore()": {
        "notice": " A contract storing operator assignments."
      },
      "primaryTerminalOf(uint256,address)": {
        "notice": "The primary terminal that is managing funds for a project for a specified token."
      },
      "projects()": {
        "notice": " The Projects contract which mints ERC-721's that represent project ownership and transfers."
      },
      "removeTerminalOf(uint256,address)": {
        "notice": " Remove a terminal from a project's list of terminals."
      },
      "setControllerOf(uint256,address)": {
        "notice": "Update the controller that manages how terminals interact with the ecosystem."
      },
      "setPrimaryTerminalOf(uint256,address)": {
        "notice": "Project's can set which terminal should be their primary for a particular token. This is useful in case a project has several terminals connected for a particular token."
      },
      "terminalsOf(uint256)": {
        "notice": "For each project ID, the terminals that are currently managing its funds."
      }
    },
    "notice": "Keeps a reference of which terminal contracts each project is currently accepting funds through, and which controller contract is managing each project's tokens and funding cycles.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 16946,
        "contract": "contracts/v2/JBDirectory.sol:JBDirectory",
        "label": "_terminalsOf",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_array(t_contract(IJBTerminal)25094)dyn_storage)"
      },
      {
        "astId": 16954,
        "contract": "contracts/v2/JBDirectory.sol:JBDirectory",
        "label": "_primaryTerminalOf",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_contract(IJBTerminal)25094))"
      },
      {
        "astId": 16966,
        "contract": "contracts/v2/JBDirectory.sol:JBDirectory",
        "label": "controllerOf",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_contract(IJBController)24133)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_contract(IJBTerminal)25094)dyn_storage": {
        "base": "t_contract(IJBTerminal)25094",
        "encoding": "dynamic_array",
        "label": "contract IJBTerminal[]",
        "numberOfBytes": "32"
      },
      "t_contract(IJBController)24133": {
        "encoding": "inplace",
        "label": "contract IJBController",
        "numberOfBytes": "20"
      },
      "t_contract(IJBTerminal)25094": {
        "encoding": "inplace",
        "label": "contract IJBTerminal",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(IJBTerminal)25094)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract IJBTerminal)",
        "numberOfBytes": "32",
        "value": "t_contract(IJBTerminal)25094"
      },
      "t_mapping(t_uint256,t_array(t_contract(IJBTerminal)25094)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => contract IJBTerminal[])",
        "numberOfBytes": "32",
        "value": "t_array(t_contract(IJBTerminal)25094)dyn_storage"
      },
      "t_mapping(t_uint256,t_contract(IJBController)24133)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => contract IJBController)",
        "numberOfBytes": "32",
        "value": "t_contract(IJBController)24133"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_contract(IJBTerminal)25094))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => contract IJBTerminal))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_contract(IJBTerminal)25094)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}